{
	"info": {
		"_postman_id": "3da025f8-2e5d-4e90-8c20-8261aacd0150",
		"name": "Starwars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26515921"
	},
	"item": [
		{
			"name": "https://swapi.py4e.com/?id=7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.py4e.com/api/people/10",
					"protocol": "https",
					"host": [
						"swapi",
						"py4e",
						"com"
					],
					"path": [
						"api",
						"people",
						"10"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://swapi.py4e.com/?id=5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.py4e.com/api/planets/7",
					"protocol": "https",
					"host": [
						"swapi",
						"py4e",
						"com"
					],
					"path": [
						"api",
						"planets",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://swapi.py4e.com/?id=10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.py4e.com/api/starships/3",
					"protocol": "https",
					"host": [
						"swapi",
						"py4e",
						"com"
					],
					"path": [
						"api",
						"starships",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "https://swapi.py4e.com/?id=10",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.py4e.com/?id=10",
							"protocol": "https",
							"host": [
								"swapi",
								"py4e",
								"com"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "id",
									"value": "10"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Date",
							"value": "Tue, 28 Mar 2023 06:25:29 GMT"
						},
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Clacks-Overhead",
							"value": "GNU Terry Pratchett"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=14400"
						},
						{
							"key": "CF-Cache-Status",
							"value": "HIT"
						},
						{
							"key": "Age",
							"value": "215"
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=CspLXOfUmD%2B%2FtYwKmSWqjOknvvkpgXubTPNUBqevv6oovU2vLc28abY5Sv35JSbvDZ4FZ54SiICxJdpi01NliOKfm2t41GzUOBbrlSMZOPMF5fzq3OM%2BqP6PGAn2rgSQdA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "7aedcbd25a8490da-FRA"
						},
						{
							"key": "Content-Encoding",
							"value": "br"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <!-- Designed and built by Paul Hallett - http://phalt.co -->\n    <head>\n        <meta charset=\"utf-8\">\n        <title>\n      SWAPI - The Star Wars API\n    </title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\">\n        <link href=\"/static/css/bootstrap.css\" rel=\"stylesheet\">\n        <link href=\"/static/css/custom.css\" rel=\"stylesheet\">\n        <link rel=\"shortcut icon\" href=\"/static/favicon.ico\">\n    \n    </style>\n    <script src=\"//code.jquery.com/jquery-2.1.0.min.js\"></script>\n    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\n</script>\n</head>\n<body>\n    <nav class=\"navbar navbar-default\" role=\"navigation\">\n        <div class=\"container-fluid\">\n            <div class=\"navbar-header\">\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n                    <span class=\"sr-only\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n            </div>\n            <div class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav navbar-left\">\n                    <li>\n                        <a href=\"/\">Home</a>\n                    </li>\n                </ul>\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li>\n                        <a href=\"/about\">About</a>\n                    </li>\n                    <li>\n                        <a href=\"/documentation\">Documentation</a>\n                    </li>\n                </ul>\n            </div>\n            <!-- /.navbar-collapse -->\n  \n        </div>\n        <!-- /.container-fluid -->\n    </nav>\n    <div class=\"container-fluid\" style=\"margin-top: 60px;\">\n        <div class=\"row center yellow\">\n            <div class=\"jumbotron\">\n                <h1>SWAPI</h1>\n                <p class=\"lead\">The Star Wars API</p>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-lg-3\">\n        </div>\n            <div class=\"col-lg-6 center\">\n                <p>All the Star Wars data you've ever wanted:</p>\n                <p>\n                    <b>Planets, Spaceships, Vehicles, People, Films and Species</b>\n                </p>\n                <p>From all \n                    <b>SEVEN</b> Star Wars films\n                </p>\n                <p>\n                    <h4>Now with The Force Awakens data!</h4>\n                </p>\n            </div>\n            <div class=\"col-lg-3\">\n        </div>\n        </div>\n        <div class=\"row\">\n            <hr>\n            <div class=\"col-sm-2 col-lg-2 col-md-2\">\n    </div>\n            <div class=\"col-lg-8 col-md-8 col-sm-8\">\n                <h1 class=\"center\">\n            Try it now!\n        </h1>\n                <div class=\"input-group\">\n                    <span class=\"input-group-addon\">https://swapi.py4e.com/api/</span>\n                    <input id=\"interactive\" type=\"text\" class=\"form-control\" placeholder=\"people/1/\">\n                    <span class=\"input-group-btn\">\n                        <button onClick=\"interactive_call();return false;\" class=\"btn btn-primary\">request</button>\n                    </span>\n                </div>\n                <small>Need a hint? try \n                    <a href=\"#\" onClick=\"update('people/1/');return false;\">\n                        <i>people/1/</i>\n                    </a> or\n                    <a href=\"#\" onClick=\"update('planets/3/');return false;\">\n                        <i>planets/3/</i>\n                    </a> or\n                    <a href=\"#\" onClick=\"update('starships/9/');return false;\">\n                        <i>starships/9/</i>\n                    </a>\n                </small>\n                <p class=\"lead pad_top\">Result:</p>\n                <div class=\"well\">\n                    <pre id=\"interactive_output\" class=\"pre-scrollable\">{\n\t\"name\": \"Luke Skywalker\",\n\t\"height\": \"172\",\n\t\"mass\": \"77\",\n\t\"hair_color\": \"blond\",\n\t\"skin_color\": \"fair\",\n\t\"eye_color\": \"blue\",\n\t\"birth_year\": \"19BBY\",\n\t\"gender\": \"male\",\n\t\"homeworld\": \"https://swapi.py4e.com/api/planets/1/\",\n\t\"films\": [\n\t\t\"https://swapi.py4e.com/api/films/2/\",\n\t\t\"https://swapi.py4e.com/api/films/6/\",\n\t\t\"https://swapi.py4e.com/api/films/3/\",\n\t\t\"https://swapi.py4e.com/api/films/1/\",\n\t\t\"https://swapi.py4e.com/api/films/7/\"\n\t],\n\t\"species\": [\n\t\t\"https://swapi.py4e.com/api/species/1/\"\n\t],\n\t\"vehicles\": [\n\t\t\"https://swapi.py4e.com/api/vehicles/14/\",\n\t\t\"https://swapi.py4e.com/api/vehicles/30/\"\n\t],\n\t\"starships\": [\n\t\t\"https://swapi.py4e.com/api/starships/12/\",\n\t\t\"https://swapi.py4e.com/api/starships/22/\"\n\t],\n\t\"created\": \"2014-12-09T13:50:51.644000Z\",\n\t\"edited\": \"2014-12-20T21:17:56.891000Z\",\n\t\"url\": \"https://swapi.py4e.com/api/people/1/\"\n}\n          </pre>\n                </div>\n            </div>\n            <div class=\"col-sm-2 col-lg-2 col-md-2\">\n    </div>\n        </div>\n        <div class=\"row pad_bot\">\n            <div class=\"col-sm-1 col-lg-1 col-md-1\">\n        </div>\n            <div class=\"col-sm-3 col-lg-3 col-md-3\">\n                <h4 class=\"center\">What is this?</h4>\n                <p>The Star Wars API, or \"swapi\" (Swah-pee) is the world's first quantified and programmatically-accessible data source for all the data from the Star Wars canon universe!</p>\n                <p>We've taken all the rich contextual stuff from the universe and formatted into something easier to consume with software. Then we went and stuck an API on the front so you can access it all!</p>\n            </div>\n            <div class=\"col-sm-4 col-lg-4 col-md-4\">\n                <h4 class=\"center\">How can I use it?</h4>\n                <p>All the data is accessible through our HTTP web API. Consult our \n                    <a href=\"/documentation\">documentation</a> if you'd like to get started.\n                </p>\n                <p>Helper libraries for popular programming languages are also provided so you can consume swapi in your favourite programming language, in a style that suits you.</p>\n            </div>\n        </div>\n        <hr>\n        <script>\n    function update(call){\n        jQuery('#interactive').val(call);\n        interactive_call();\n    }\n\n    function interactive_call(){\n        var content = jQuery('#interactive').val()\n        if(content == ''){\n            content = 'people/1/';\n        }\n        var call_url = 'api/' + content;\n        jQuery.ajax({\n      dataType: 'json',\n      url: call_url,\n      context: document.body\n    }).complete(function(data) {\n        if(data['status'] == 200){\n            var d = jQuery.parseJSON(data['responseText']);\n            jQuery('#interactive_output').text(JSON.stringify(d, null, '\\t'));\n        }\n        else if (data['status'] == 404) {\n            jQuery('#interactive_output').text(data['status'] + ' ' + data['statusText']);\n        }\n    });\n    }\n    </script>\n        <div class=\"row\">\n  </div>\n    </body>\n</html>"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://swapi.py4e.com/",
			"type": "string"
		}
	]
}